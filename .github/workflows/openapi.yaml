name: OpenAPI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  swagger_ui:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: swagger-ui
          spec-file: interface.yaml
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: swagger-ui
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: generate C++ client
      run: |
        mkdir cpp_client
        docker run --rm -u "$(id -u $USER):$(id -g $USER)" -v ${PWD}:/local -v ${PWD}/cpp_client:/cpp_client swaggerapi/swagger-codegen-cli generate -i /local/interface.yaml -l cpprest -o /cpp_client
    - uses: actions/upload-artifact@v2
      with:
        name: cpp_client
        path: cpp_client
  commit_changes:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: ros-tooling/setup-ros@v0.2
      - uses: actions/checkout@v2
        with:
          ref: master
          repository: OUXT-Polaris/unisim_ros2_control
          token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
      - uses: actions/download-artifact@v2
        with:
          name: cpp_client
          path: src/api_client
      - name: run format
        run: |
          cd src/api_client
          ament_clang_format --reformat
      - name: Check branch exist
        id: check_branch
        run: |
          echo "::set-output name=exist::$(git ls-remote --heads https://github.com/unisim_ros2_control.git sync/api_client | wc -l)"
      - name: Count changes
        id: changes
        run: |
          git add -N .
          echo "::set-output name=count::$(git diff --name-only | wc -l)"
      - uses: peter-evans/create-pull-request@v3
        id: create_pull_request
        if: steps.check_branch.outputs.exist == 0 && steps.changes.outputs.count > 0
        with:
          token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
          commit-message: Update API client
          committer: wam-v-tan <ouxt.share@gmail.com>
          author: wam-v-tan <ouxt.share@gmail.com>
          signoff: false
          branch: sync/api_client
          base: ${{ steps.check_default_branch.outputs.default_branch }}
          delete-branch: true
          title: '[Bot] Update API client'
          body: |
            # Description
            Update client by [this action](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}).
            # How to check
            Please check passing all CI test.
          labels: |
            bot
          assignees: wam-v-tan
          reviewers: wam-v-tan
          team-reviewers: |
            owners
            maintainers
          draft: false
      - name: Enable Pull Request Automerge
        if: steps.create_pull_request.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
          pull-request-number: ${{ steps.create_pull_request.outputs.pull-request-number }}
          merge-method: squash
          repository: OUXT-Polaris/unisim_ros2_control